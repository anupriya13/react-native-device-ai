var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var axios=require('axios');var AzureOpenAI=function(){function AzureOpenAI(){(0,_classCallCheck2.default)(this,AzureOpenAI);this.apiKey=null;this.endpoint=null;this.apiVersion='2023-05-15';this.deployment='gpt-35-turbo';}return(0,_createClass2.default)(AzureOpenAI,[{key:"setConfig",value:function setConfig(config){if(!config){this.apiKey=null;this.endpoint=null;this.apiVersion='2023-05-15';this.deployment='gpt-35-turbo';return;}var apiKey=config.apiKey,endpoint=config.endpoint,apiVersion=config.apiVersion,deployment=config.deployment;if(!apiKey||!endpoint){throw new Error('Both apiKey and endpoint are required for Azure OpenAI configuration');}var minLength=process.env.NODE_ENV==='test'?5:10;if(typeof apiKey!=='string'||apiKey.length<minLength){throw new Error('Invalid API key format');}if(!endpoint.startsWith('https://')){throw new Error('Endpoint must use HTTPS protocol');}this.apiKey=apiKey;this.endpoint=endpoint.replace(/\/$/,'');this.apiVersion=apiVersion||'2023-05-15';this.deployment=deployment||'gpt-35-turbo';if(process.env.NODE_ENV!=='test'){console.log('Azure OpenAI configured successfully:',{endpoint:this._maskEndpoint(endpoint),apiKeyLength:apiKey.length,apiVersion:this.apiVersion,deployment:this.deployment});}}},{key:"isConfigured",value:function isConfigured(){return!!(this.apiKey&&this.endpoint);}},{key:"generateInsights",value:(function(){var _generateInsights=(0,_asyncToGenerator2.default)(function*(deviceData,type='general'){if(!this.isConfigured()){throw new Error('Azure OpenAI not configured. Call setConfig() first.');}try{var prompt=this._buildPrompt(deviceData,type);var response=yield this._makeAPIRequest(prompt);return this._parseResponse(response);}catch(error){console.error('Azure OpenAI API Error:',this._sanitizeError(error));throw new Error(`Failed to generate AI insights: ${error.message}`);}});function generateInsights(_x){return _generateInsights.apply(this,arguments);}return generateInsights;}())},{key:"generateCustomResponse",value:(function(){var _generateCustomResponse=(0,_asyncToGenerator2.default)(function*(userPrompt,relevantData){if(!this.isConfigured()){throw new Error('Azure OpenAI not configured. Call setConfig() first.');}try{var prompt=this._buildCustomPrompt(userPrompt,relevantData);var response=yield this._makeAPIRequest(prompt,{maxTokens:100});return this._parseResponse(response);}catch(error){console.error('Azure OpenAI API Error:',this._sanitizeError(error));throw new Error(`Failed to generate custom response: ${error.message}`);}});function generateCustomResponse(_x2,_x3){return _generateCustomResponse.apply(this,arguments);}return generateCustomResponse;}())},{key:"_buildPrompt",value:function _buildPrompt(deviceData,type){var basePrompt=`Analyze the following device information and provide helpful insights:\n\n${JSON.stringify(deviceData,null,2)}\n\n`;switch(type){case'battery':return basePrompt+'Focus on battery optimization recommendations. Provide 3-5 actionable tips to improve battery life.';case'performance':return basePrompt+'Focus on performance optimization. Provide 3-5 actionable tips to improve device performance and speed.';default:return basePrompt+'Provide a comprehensive analysis with general recommendations for device optimization, including battery, performance, and storage tips.';}}},{key:"_buildCustomPrompt",value:function _buildCustomPrompt(userPrompt,relevantData){return`User Question: "${userPrompt}"

Device Data:
${JSON.stringify(relevantData,null,2)}

Instructions: Answer the user's question in ONE SHORT SENTENCE (maximum 20 words) using the provided device data. Be direct, factual, and conversational. Focus only on answering what was asked.`;}},{key:"_makeAPIRequest",value:(function(){var _makeAPIRequest2=(0,_asyncToGenerator2.default)(function*(prompt,options={}){var url=`${this.endpoint}/openai/deployments/${this.deployment}/chat/completions?api-version=${this.apiVersion}`;var headers={'Content-Type':'application/json','api-key':this.apiKey};var data={messages:[{role:'system',content:options.systemMessage||'You are a helpful device optimization expert. Provide clear, actionable advice in a friendly tone. Keep responses concise but informative.'},{role:'user',content:prompt}],max_tokens:options.maxTokens||500,temperature:options.temperature||0.7};var response=yield axios.post(url,data,{headers,timeout:30000});return response.data;});function _makeAPIRequest(_x4){return _makeAPIRequest2.apply(this,arguments);}return _makeAPIRequest;}())},{key:"_parseResponse",value:function _parseResponse(response){try{if(response.choices&&response.choices.length>0){return response.choices[0].message.content.trim();}throw new Error('Invalid response format from Azure OpenAI');}catch(error){console.error('Error parsing Azure OpenAI response:',error.message);return'Unable to generate insights at this time. Please try again later.';}}},{key:"_maskEndpoint",value:function _maskEndpoint(endpoint){try{var url=new URL(endpoint);var hostname=url.hostname;var parts=hostname.split('.');if(parts.length>2){var first=parts[0];if(first.length>2){parts[0]=first[0]+'*'.repeat(first.length-2)+first[first.length-1];}}return`${url.protocol}//${parts.join('.')}`;}catch(error){return'https://*****.openai.azure.com';}}},{key:"_sanitizeError",value:function _sanitizeError(error){var sanitized={message:error.message,status:error.response?.status,statusText:error.response?.statusText};if(sanitized.message){sanitized.message=sanitized.message.replace(/api-key[=:\s]+[^\s&]+/gi,'api-key=***').replace(/authorization[=:\s]+bearer\s+[^\s&]+/gi,'authorization=Bearer ***').replace(/[a-f0-9]{32,}/gi,'***');}return sanitized;}}],[{key:"loadFromEnvironment",value:function loadFromEnvironment(){if(typeof process!=='undefined'&&process.env){var apiKey=process.env.AZURE_OPENAI_API_KEY;var endpoint=process.env.AZURE_OPENAI_ENDPOINT;var apiVersion=process.env.AZURE_OPENAI_API_VERSION;var deployment=process.env.AZURE_OPENAI_DEPLOYMENT;if(apiKey&&endpoint){return{apiKey,endpoint,apiVersion,deployment};}}return null;}}]);}();var azureOpenAIInstance=new AzureOpenAI();azureOpenAIInstance.AzureOpenAI=AzureOpenAI;module.exports=azureOpenAIInstance;