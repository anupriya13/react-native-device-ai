var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _reactNative=require("react-native");var ReactNativeDeviceAi=_reactNative.NativeModules.ReactNativeDeviceAi;var WindowsMCPServer=function(){function WindowsMCPServer(){(0,_classCallCheck2.default)(this,WindowsMCPServer);this.name='windows-device-server';this.type='data-source';this.platform='windows';this.connected=false;this.lastCollected=null;this.capabilities=['windows-system-info','wmi-data-collection','registry-access','performance-counters','power-management','device-enumeration'];}return(0,_createClass2.default)(WindowsMCPServer,[{key:"isAvailable",value:function isAvailable(){return _reactNative.Platform.OS==='windows'&&ReactNativeDeviceAi;}},{key:"connect",value:(function(){var _connect=(0,_asyncToGenerator2.default)(function*(){if(!this.isAvailable()){throw new Error('Windows MCP Server only available on Windows with TurboModule support');}try{yield ReactNativeDeviceAi.getDeviceInfo();this.connected=true;console.log('Windows MCP Server connected successfully');return{success:true};}catch(error){console.error('Failed to connect Windows MCP Server:',error);throw error;}});function connect(){return _connect.apply(this,arguments);}return connect;}())},{key:"disconnect",value:(function(){var _disconnect=(0,_asyncToGenerator2.default)(function*(){this.connected=false;console.log('Windows MCP Server disconnected');});function disconnect(){return _disconnect.apply(this,arguments);}return disconnect;}())},{key:"isConnected",value:function isConnected(){return this.connected&&this.isAvailable();}},{key:"getType",value:function getType(){return this.type;}},{key:"getCapabilities",value:function getCapabilities(){return this.capabilities;}},{key:"getLastCollected",value:function getLastCollected(){return this.lastCollected;}},{key:"collectData",value:(function(){var _collectData=(0,_asyncToGenerator2.default)(function*(options={}){if(!this.isConnected()){throw new Error('Windows MCP Server not connected');}var _options$sources=options.sources,sources=_options$sources===void 0?['all']:_options$sources,_options$includeWMI=options.includeWMI,includeWMI=_options$includeWMI===void 0?true:_options$includeWMI,_options$includeRegis=options.includeRegistry,includeRegistry=_options$includeRegis===void 0?true:_options$includeRegis,_options$includePerfo=options.includePerformance,includePerformance=_options$includePerfo===void 0?true:_options$includePerfo;try{var windowsData={};this.lastCollected=new Date().toISOString();if(sources.includes('all')||sources.includes('device-info')){windowsData.deviceInfo=yield ReactNativeDeviceAi.getDeviceInfo();}if(sources.includes('all')||sources.includes('windows-system')){windowsData.windowsSystemInfo=yield ReactNativeDeviceAi.getWindowsSystemInfo();}if(includeWMI&&(sources.includes('all')||sources.includes('wmi'))){try{windowsData.wmiData=yield ReactNativeDeviceAi.getWMISystemInfo();}catch(error){console.warn('WMI data collection failed:',error.message);windowsData.wmiData={error:'WMI not available'};}}if(includeRegistry&&(sources.includes('all')||sources.includes('registry'))){windowsData.registryInfo=yield this._collectRegistryData();}if(includePerformance&&(sources.includes('all')||sources.includes('performance'))){windowsData.performanceData=yield this._collectPerformanceData();}windowsData.metadata={timestamp:this.lastCollected,source:'windows-mcp-server',platform:'windows',turboModuleVersion:'1.0.0',dataCollectionMethod:'windows-apis'};return{success:true,data:windowsData,timestamp:this.lastCollected,source:this.name};}catch(error){console.error('Windows MCP data collection failed:',error);return{success:false,error:error.message,timestamp:this.lastCollected,source:this.name};}});function collectData(){return _collectData.apply(this,arguments);}return collectData;}())},{key:"_collectRegistryData",value:(function(){var _collectRegistryData2=(0,_asyncToGenerator2.default)(function*(){try{var osVersion=yield this._getRegistryValue('SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion','ProductName');var buildNumber=yield this._getRegistryValue('SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion','CurrentBuild');var releaseId=yield this._getRegistryValue('SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion','ReleaseId');return{timestamp:new Date().toISOString(),osVersion,buildNumber,releaseId,source:'windows-registry'};}catch(error){return{error:'Registry access failed: '+error.message,timestamp:new Date().toISOString()};}});function _collectRegistryData(){return _collectRegistryData2.apply(this,arguments);}return _collectRegistryData;}())},{key:"_collectPerformanceData",value:(function(){var _collectPerformanceData2=(0,_asyncToGenerator2.default)(function*(){try{var deviceInfo=yield ReactNativeDeviceAi.getDeviceInfo();return{timestamp:new Date().toISOString(),memory:deviceInfo.memory,cpu:deviceInfo.cpu,storage:deviceInfo.storage,battery:deviceInfo.battery,network:deviceInfo.network,source:'windows-performance-apis'};}catch(error){return{error:'Performance data collection failed: '+error.message,timestamp:new Date().toISOString()};}});function _collectPerformanceData(){return _collectPerformanceData2.apply(this,arguments);}return _collectPerformanceData;}())},{key:"_getRegistryValue",value:(function(){var _getRegistryValue2=(0,_asyncToGenerator2.default)(function*(keyPath,valueName){switch(valueName){case'ProductName':return'Microsoft Windows 11';case'CurrentBuild':return'22000';case'ReleaseId':return'21H2';default:return'Unknown';}});function _getRegistryValue(_x,_x2){return _getRegistryValue2.apply(this,arguments);}return _getRegistryValue;}())},{key:"getWindowsInsights",value:(function(){var _getWindowsInsights=(0,_asyncToGenerator2.default)(function*(deviceData,query){if(!this.isConnected()){throw new Error('Windows MCP Server not connected');}try{var windowsData=yield this.collectData();var insights=this._generateWindowsSpecificInsights(windowsData.data,query);return{success:true,insights,windowsData:windowsData.data,query,timestamp:new Date().toISOString()};}catch(error){return{success:false,error:error.message,query,timestamp:new Date().toISOString()};}});function getWindowsInsights(_x3,_x4){return _getWindowsInsights.apply(this,arguments);}return getWindowsInsights;}())},{key:"_generateWindowsSpecificInsights",value:function _generateWindowsSpecificInsights(windowsData,query){var insights=[];if(windowsData.windowsSystemInfo){var _windowsData$windowsS=windowsData.windowsSystemInfo,osVersion=_windowsData$windowsS.osVersion,buildNumber=_windowsData$windowsS.buildNumber;insights.push(`Running Windows ${osVersion} build ${buildNumber}`);if(parseInt(buildNumber)>=22000){insights.push('Your system is running Windows 11 with modern security features');}}if(windowsData.wmiData&&!windowsData.wmiData.error){insights.push(`Computer: ${windowsData.wmiData.computerSystem}`);insights.push(`Processor: ${windowsData.wmiData.processor}`);}if(windowsData.performanceData){var _windowsData$performa=windowsData.performanceData,memory=_windowsData$performa.memory,cpu=_windowsData$performa.cpu;if(memory&&memory.used>80){insights.push('High memory usage detected - consider closing unused applications');}if(cpu&&cpu.usage>80){insights.push('High CPU usage detected - system may be running intensive tasks');}}if(query&&query.toLowerCase().includes('performance')){insights.push('Windows Performance Monitor shows real-time system metrics');}if(query&&query.toLowerCase().includes('security')){insights.push('Windows Defender and Windows Security provide comprehensive protection');}return insights.length>0?insights:['Windows system information collected successfully'];}}]);}();var _default=exports.default=WindowsMCPServer;